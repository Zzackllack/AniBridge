name: Build Release Artifacts

on:
  push:
    tags:
      - "v*"

jobs:
  build-python-dists:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install build tools
        run: python -m pip install --upgrade pip build
      - name: Build distributions
        run: python -m build
      - name: Create checksums
        run: |
          cd dist && sha256sum * > SHA256SUMS
      - name: Upload Python dists
        uses: softprops/action-gh-release@v1
        with:
          files: "dist/*"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  pyinstaller-builds:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install dependencies (linux/macos)
        if: matrix.os != 'windows-latest'
        run: |
          python -m pip install --upgrade pip
          python -m pip install pyinstaller

      - name: Build single-file binary (linux/macos)
        if: matrix.os != 'windows-latest'
        run: |
          pyinstaller --onefile app/main.py --name anibridge
          mkdir -p artifacts
          mv dist/anibridge artifacts/ || true

      - name: Package artifact (linux/macos)
        if: matrix.os != 'windows-latest'
        run: |
          mkdir -p release
          tar -czf release/anibridge-${{ matrix.os }}-$(cat VERSION).tar.gz -C artifacts . || true
          ls -la release || true

      - name: Install dependencies (windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          python -m pip install pyinstaller

      - name: Build single-file binary (windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          pyinstaller --onefile app\main.py --name anibridge.exe
          New-Item -ItemType Directory -Force -Path artifacts
          Move-Item -Path dist\anibridge.exe -Destination artifacts\anibridge.exe -ErrorAction SilentlyContinue

      - name: Package artifact (windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path release
          $v = Get-Content VERSION -Raw
          Compress-Archive -Path artifacts\* -DestinationPath release\anibridge-windows-${v}.zip -Force
          Get-ChildItem release
      - name: Upload binaries
        uses: softprops/action-gh-release@v1
        with:
          files: "release/*"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
