name: Publish to GHCR

on:
  push:
    branches: [main]
    tags: ["v*"]
    paths:
      - "Dockerfile"
      - "app/**"
      - "requirements.runtime.txt"
      - "requirements.txt"
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  # VERSION will be populated from file below
  VERSION: ""

concurrency:
  group: ghcr-publish-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Decide target platforms
        shell: bash
        run: |
          PLATFORMS="linux/amd64"
          echo "PLATFORMS=${PLATFORMS}" >> "$GITHUB_ENV"

      - name: Normalize image name to lowercase
        shell: bash
        run: |
          echo "IMAGE_NAME=${IMAGE_NAME,,}" >> "$GITHUB_ENV"

      - name: Read VERSION
        shell: bash
        run: |
          if [ -f VERSION ]; then
            echo "VERSION=$(cat VERSION)" >> "$GITHUB_ENV"
          else
            echo "VERSION=${GITHUB_REF_NAME#v}" >> "$GITHUB_ENV"
          fi

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}
            # add explicit version tags from VERSION file
            type=raw,value=${{ env.VERSION }}
            type=raw,value=v${{ env.VERSION }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: ${{ env.PLATFORMS }}
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:v${{ env.VERSION }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          sbom: false
